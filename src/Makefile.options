# patform detection if needed
ifdef LINUX
  WIN=
  OSX=
else
  ifdef WIN
    OSX=
  else
    ifndef OSX
      ifeq ($(OS),Windows_NT)
	WIN = 1
      else ifeq ($(shell uname),Darwin)
	OSX = 1
      else
	LINUX = 1
      endif
    endif
  endif
endif

# shell settings
ifdef WINCMD
  mkdir = for %%d in ($(subst /,\\,$(1))) do if not exist %%d md %%d &
  touch = for %%f in ($(subst /,\\,$(1))) do if not exist %%f copy nul %%f &
  rm = for %%f in ($(subst /,\\,$(1))) do if exist %%f del /q %%f &
  rmdir = for %%d in ($(subst /,\\,$(1))) do if exist %%d rd /s /q %%d &
else
  mkdir = mkdir -p $(1) ;
  touch = touch $(1) ;
  rm = rm -f $(1) ;
  rmdir = rm -rf $(1) ;
endif

# platform settings
ifdef LINUX
  exe = $(foreach f,$(1),$(f))
  lib = $(foreach f,$(1),$(f).a)
  dynlib = $(foreach f,$(1),$(f).so)
  version_script = -Wl,--version-script=$(1)
else ifdef WIN
  exe = $(foreach f,$(1),$(f).exe)
  lib = $(foreach f,$(1),$(f).a)
  dynlib = $(foreach f,$(1),$(f).dll)
  version_script = -Wl,--version-script=$(1)
  implib = $(foreach f,$(1),$(f).dll.lib)
  create_implib = -Wl,--out-implib,$(call implib,$(1))
else ifdef OSX
  exe = $(foreach f,$(1),$(f))
  lib = $(foreach f,$(1),$(f).a)
  dynlib = $(foreach f,$(1),$(f).dylib)
endif

# switches
C_FLAGS += -std=c++11 -W -Wall -mtune=generic -I. -fvisibility=hidden
ifndef OSX
  LD_FLAGS += -static-libgcc -static-libstdc++
  DYN_LD_FLAGS += -shared
  ifeq ($(BITS),32)
    C_FLAGS += -m32
    LD_FLAGS += -m32
  else ifeq ($(BITS),64)
    C_FLAGS += -m64
    LD_FLAGS += -m64
  endif
  ifdef DEBUG
    C_FLAGS += -O3 -ggdb -DDEBUG
  else ifdef DEBUG_MORE
    C_FLAGS += -O -ggdb -DDEBUG -D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC
  else ifdef PROFILE
    C_FLAGS += -O3 -ggdb -pg
    LD_FLAGS += -pg
  else ifdef RELEASE
    C_FLAGS += -O3 -DNDEBUG -flto
    LD_FLAGS += -s $(C_FLAGS) #Pass all C_FLAGS because of -flto
  else
    C_FLAGS += -O3
    LD_FLAGS += -s
  endif
  ifdef LINUX
    DYN_C_FLAGS += -fPIC
  else ifdef WIN
    DYN_C_FLAGS += -DBUILDING_DLL
  endif
else
  C_FLAGS += -mmacosx-version-min=10.7 -stdlib=libc++
  LD_FLAGS += -mmacosx-version-min=10.7 -stdlib=libc++
  DYN_LD_FLAGS += -dynamiclib
  ifeq ($(BITS),32)
    C_FLAGS += -arch i386
    LD_FLAGS += -arch i386
  else ifeq ($(BITS),64)
    C_FLAGS += -arch x86_64
    LD_FLAGS += -arch x86_64
  else ifeq ($(BITS),32+64)
    C_FLAGS += -arch i386 -arch x86_64
    LD_FLAGS += -arch i386 -arch x86_64
  endif
  ifdef DEBUG
    C_FLAGS += -O3 -g -DDEBUG
  else ifdef RELEASE
    C_FLAGS += -O3 -DNDEBUG -flto
    LD_FLAGS += -Wl,-x $(C_FLAGS) #Pass all C_FLAGS because of -flto
  else
    C_FLAGS += -O3
    # The following has been removed because of linking errors of executables.
    # It is a known unfixed problem of OSX clang. Note that strip -x works.
    # LD_FLAGS += -Wl,-x
  endif
endif
DYN_C_FLAGS += $(C_FLAGS)
DYN_LD_FLAGS += $(LD_FLAGS)
