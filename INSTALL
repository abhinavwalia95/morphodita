MorphoDiTa Installation
=======================

MorphoDiTa releases are available on GitHub (http://github.com/ufal/morphodita),
either as a pre-compiled binary package, or source code only. The binary package
contains Linux and Windows binaries, C++ library binary, Java bindings binary,
and source code of all language bindings (Java, Python, Perl) and MorphoDiTa.
While the binary packages do not contain compiled Python or Perl bindings,
packages for those languages are available in standard package repositories,
i.e. on PyPI and CPAN.

To use MorphoDiTa, a language model is needed. Here is a list of available
language models (http://ufal.mff.cuni.cz/morphodita#language_models).

If you want to compile MorphoDiTa manually, sources are available on on GitHub
(http://github.com/ufal/morphodita), both in the pre-compiled binary package
releases (http://github.com/ufal/morphodita/releases) and in the repository
itself.


Requirements
============

- G++ 4.7 or newer, alternatively clang 3.2 or newer
- make
- SWIG 2.0.5 or newer for language bindings other than C++


Compilation
===========

To compile MorphoDiTa on Unix-like systems, run make in the src directory.

Make targets and options:

- exe: compile the binaries (default)
- lib: compile the shared (dynamically loaded) library
- BITS=32 or BITS=64: compile for specified 32-bit or 64-bit architecture
  instead of the default one
- RELEASE=1: turn off assertions and use LTO
- PROFILE=1: turn on profiling
- DEBUG=1: compile with debug informations and C++ library debugging


Windows
-------

Currently only G++ is supported under Windows. We use TDM-GCC
(http://tdm-gcc.tdragon.net/) for producing Windows builds, but MinGW and Cygwin
are also known to work. If you are interested in adding support for other
compilers (most notably, Visual Studio), let us know.

By default, Unix-like shell is required (i.e., Cygwin or MSYS). If you use
standard Windows Cmd.exe (i.e., TDM-GCC or plain MinGW), use

  make WINCMD=1

Note that make in MinGW is usually distributed as mingw32-make.


Other language bindings
=======================


Java
----

Binary Java bindings are available in MorphoDiTa binary packages.

To compile Java bindings manually, run make in the bindings/java directory,
optionally with the options descriged in MorphoDiTa Installation. Java 6 and
newer is supported.

The Java installation specified in the environment variable JAVA_HOME is used.
If the environment variable does not exist, the JAVA_HOME can be specified using

  make JAVA_HOME=path_to_Java_installation


Perl
----

The Perl bindings are available as Ufal-MorphoDiTa package on CPAN.

To compile Perl bindings manually, run make in the bindings/perl directory,
optionally with the options descriged in MorphoDiTa Installation. Perl 5.10 and
later is supported.

Path to the include headers of the required Perl version must be specified in
the PERL_INCLUDE variable using

  make PERL_INCLUDE=path_to_Perl_includes


Python
------

The Python bindings are available as ufal.morphodita package on PyPI.

To compile Python bindings manually, run make in the bindings/python directory,
optionally with options descriged in MorphoDiTa Installation. Both Python 2.6+
and Python 3+ are supported.

Path to the include headers of the required Python version must be specified in
the PYTHON_INCLUDE variable using

  make PYTHON_INCLUDE=path_to_Python_includes
