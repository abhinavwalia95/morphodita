MorphoDiTa User's Manual


%!encoding: utf-8

In a natural language text, the task of morphologic analysis is to assign for each token (word) in a sentence its lemma (cannonical form) and a part-of-speech tag (POS tag). This is usually achieved in two steps: a morphologic dictionary looks up all possible lemmas and POS tags for each word, and subsequently, a morphologic tagger picks for each word the best lemma-POS tag candidate. The second task is called a disambiguation.

MorphoDiTa also performs these two steps of morphologic analysis: It first outputs all possible pairs of lemma and POS tag for each token. In Czech, this procedure is based on a well-known Jan Hajič's morphologic dictionary ([Hajič 2004 http://books.google.cz/books?id=sB63AAAACAAJ]). Consequently, the optimal combination of lemmas and POS tags is selected for the words in a sentence using an algorithm described in [Spoustová et al. 2009 http://aclweb.org/anthology//E/E09/E09-1087.pdf].

This section describes the commandline tools and interfaces; the models and
dictionaries; and the Czech morphology. The C++ library with bindings for other
languages is described elsewhere, either in MorphoDiTa API Tutorial or in
MorphoDiTa API Reference.

++ Models ++

Like any supervised machine learning tool, MorphoDiTa needs a trained linguistic model. Czech models trained on [PDT 2.5 http://ufal.mff.cuni.cz/pdt2.5/] are distributed with the tool. The models are distributed under the [CC BY-NC-SA http://creativecommons.org/licenses/by-nc-sa/3.0/] licence.

One may wish to use either a larger, more precise, but slower model; or a more
light-weight, faster, but less accurate model. The parameters of the models
distributed with MorphoDiTa are as follows:

: ``czech-<version>.tagger-best_accuracy``
  Best and slowest tagger (Viterbi of order 3). Reaches 95.44% tag accuracy, 97.80% lemma accuracy, 94.66% overall accuracy on [PDT 2.5 http://ufal.mff.cuni.cz/pdt2.5/] etest data. Speed: ~10k words/s.

: ``czech-<version>.tagger-fast``
  Faster tagger with slightly worse results (Viterbi of order 2). Reaches 94.45% tag accuracy, 97.66% lemma accuracy, 93.96% overall accuracy on [PDT 2.5 http://ufal.mff.cuni.cz/pdt2.5] etest data. Speed: ~50k words/s.

: ``czech-<version>.lemmatizer``
  Very fast tagger using only first two tag positions. Can be used as a lemmatizator. Reaches 99.18% tag accuracy, 97.64% lemma accuracy, 97.59% overall accuracy on [PDT 2.5 http://ufal.mff.cuni.cz/pdt2.5] etest data. Speed: ~200k words/s.


Please make sure you are using the linguistic models in a version corresponding to your MorphoDiTa release. The best way to assure this is to use the most current MorphoDiTa release with the most current model release.

++ Dictionaries ++

MorphoDiTa is distributed with two Czech morphologic dictionaries:

: ``czech-<version>.dict``
  Jan Hajič's ([Hajič 2004 http://books.google.cz/books?id=sB63AAAACAAJ]) morpho dictionary used by ``czech-<version>_best_accuracy.tagger`` and ``czech-<version>_fast.tagger``.

: ``czech-<version>.lemmadict``
  Jan Hajič ([Hajič 2004 http://books.google.cz/books?id=sB63AAAACAAJ]) morpho dictionary used by ``czech-<version>_lemmatizer.tagger``, using only first two tag positions.


++ Czech Morphology ++

In the Czech language, MorphoDiTa uses Czech morphologic system by
Jan Hajič ([Hajič 2004 http://books.google.cz/books?id=sB63AAAACAAJ]).
In this system, tags are positional with 15 positions corresponding to part of
speech, detailed part of speech, gender, number, case, etc. (e.g. ``NNFS1-----A----``).
Czech lemmas consist of a base part, which is a meaningful prefix and we call
it a ``raw lemma`` in this documentation; and a certain number of technical
suffixes. The following examples illustrate this:

- ``Japonsko_;G`` (raw lemma: ``Japonsko``)
- ``se_^(zvr._zájmeno/částice)`` (raw lemma: ``se``)
- ``tvořit_:T`` (raw lemma: ``tvořit``)


For a more detailed reference about the Czech morphology, please see
[Lemma and Tag Structure in PDT 2.0 http://ufal.mff.cuni.cz/pdt2.0/doc/manuals/en/m-layer/html/ch02.html].

++ Segmentation and Tokenization ++

In beta version, the MorphoDiTa tagger accepts segmented and tokenized data in raw text as an input (the input format is described in the Tagger section). As our further work, we plan to include (optional) segmenter and tokenizer in MorphoDiTa.

++ Tagger ++

Probably the most common usage of MorphoDita is running a tagger to tag your data.

``run_tagger tagger_model``

Run the tagger with a model given as the first argument. The input is read from standard input
and is assumed to be in UTF-8 encoding.

+++ Untokenized Input +++

The input is by default automatically tokenized and segmented. The output is in
XML format without a root element, using ``<form lemma="..." tag="...">...</form>``
element to encode the assigned lemma and tag.

An example of input data ``tagger_input.txt``:
``` Děti pojedou k babičce. Už se těší.

An example of MorphoDiTa run_tagger command line:
``` cat tagger_input.txt | ./run_tagger czech.best_accuracy_tagger

An example of output data (line breaks added):
```
<form lemma='dítě' tag='NNFP1-----A----'>Děti</form>
<form lemma='jet-1_^(pohybovat_se,_ne_však_chůzí)' tag='VB-P---3F-AA---'>pojedou</form>
<form lemma='k-1' tag='RR--3----------'>k</form>
<form lemma='babička' tag='NNFS3-----A----'>babičce</form>
<form lemma='.' tag='Z:-------------'>.</form>
<form lemma='už-1' tag='Db-------------'>Už</form>
<form lemma='se_^(zvr._zájmeno/částice)' tag='P7-X4----------'>se</form>
<form lemma='těšit_:T' tag='VB-S---3P-AA---'>těší</form>
<form lemma='.' tag='Z:-------------'>.</form>
```

+++ Vertical Format +++

If the input is already tokenized and segmented, vertical input format can be used.
The vertical input format contains word on a line, empty line being end of sentence.
The output has the same number of lines as input, line //l// is a tab separated
lemma-tag pair assigned to the word on the input line //l//.

An example of input data ``tagger_input_vertical.txt``:
```
Děti
pojedou
k
babičce
.

Už
se
těší
.
```

An example of MorphoDiTa run_tagger command line:
``` cat tagger_input_vertical.txt | ./run_tagger czech.best_accuracy_tagger

An example of output:
```
dítě    NNFP1-----A----
jet-1_^(pohybovat_se,_ne_však_chůzí)    VB-P---3F-AA---
k-1     RR--3----------
babička NNFS3-----A----
.       Z:-------------

už-1    Db-------------
se_^(zvr._zájmeno/částice)      P7-X4----------
těšit_:T        VB-S---3P-AA---
.       Z:-------------
```

++ Morphologic Dictionary Commandline Interface ++

``run_dict morpho_dictionary``

Open the morpho dictionary and allow analysis and generation.

Read from standard input, command on a line. If there is no space on a line, perform analysis on the given word. If there is one space on a line, perform generation on the word given at the beginning of the line, with the tag specified. If there is no tag specified (for example "pes "), generate all forms. MorphoDiTa assumes UTF-8 inputs.

An example of MorphoDiTa dictionary running on commandline:

``run_dict czech.dict``
