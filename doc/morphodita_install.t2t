MorphoDiTa Installation
=======================

%!encoding: utf-8

MorphoDiTa releases are available on [GitHub http://github.com/ufal/morphodita], either as
a pre-compiled binary package, or source code only. The binary package contains Linux
and Windows binaries, ``C++`` library binary, Java bindings binary, and source code of
all language bindings (Java, Python, Perl) and MorphoDiTa. While the binary
packages do not contain compiled Python or Perl bindings, packages for those
languages are available in standard package repositories, i.e. on PyPI and CPAN.

To use MorphoDiTa, a language model is needed.
[Here is a list of available language models http://ufal.mff.cuni.cz/morphodita#language_models].

If you want to compile MorphoDiTa manually, sources are available on on
[GitHub http://github.com/ufal/morphodita], both in the
[pre-compiled binary package releases http://github.com/ufal/morphodita/releases]
and in the repository itself.


== Requirements ==

- ``G++ 4.7`` or newer, alternatively ``clang 3.2`` or newer
- ``make``
- ``SWIG 2.0.5`` or newer for language bindings other than ``C++``


== Compilation ==

To compile MorphoDiTa on Unix-like systems, run ``make`` in the ``src`` directory.

Make targets and options:
- ``exe``: compile the binaries (default)
- ``lib``: compile the library
- ``BITS=32`` or ``BITS=64``: compile for specified 32-bit or 64-bit architecture instead of the default one
- ``RELEASE=1``: turn off assertions and use LTO
- ``PROFILE=1``: turn on profiling
- ``DEBUG=1``: compile with debug informations and C++ library debugging


=== Windows ===

Currently only G++ is supported under Windows. We use
[TDM-GCC http://tdm-gcc.tdragon.net/] for producing Windows builds,
but MinGW and Cygwin are also known to work. If you are interested in adding
support for other compilers (most notably, Visual Studio), let us know.

By default, Unix-like shell is required (i.e., Cygwin or MSYS). If you use
standard Windows Cmd.exe (i.e., TDM-GCC or plain MinGW), use
``` make WINCMD=1

Note that ``make`` in MinGW is usually distributed as ``mingw32-make``.


== Other language bindings ==

=== Java ===
%!include: morphodita_bindings_java_install.t2t


=== Perl ===
%!include: morphodita_bindings_perl_install.t2t


=== Python ===
%!include: morphodita_bindings_python_install.t2t
